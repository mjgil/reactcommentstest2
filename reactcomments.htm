<!-- template.html -->
<html>
  <head>
    <title>Hello React</title>
    <script src="http://fb.me/react-0.11.0.js"></script>
    <script src="http://fb.me/JSXTransformer-0.11.0.js"></script>
    <script src="http://code.jquery.com/jquery-1.10.0.min.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/showdown/0.3.1/showdown.min.js"></script>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet/less" type="text/css" href="styles.less" />
    <script src="less.js" type="text/javascript"></script>

  </head>
  <body>
    <div id="content"></div>
    <script type="text/jsx">
      /** @jsx React.DOM */
      // The above declaration must remain intact at the top of the script.
      // Your code here
      // tutorial1.js


      var converter = new Showdown.converter();


      var Comment = React.createClass({
        render: function() {
          var rawMarkup = converter.makeHtml(this.props.children.toString());

          return (
            <div className="commentContainer">
              <div className="checkXContainer">
                <div className="check">/</div>
                <div className="x">x</div>
              </div>

              <div className="comment"><span dangerouslySetInnerHTML={{__html: rawMarkup}} /></div>
              <h2 className="commentAuthor">
                {this.props.author}
              </h2>

            </div>
          );
        }
      });


      //okay so i changed the structure of the html a little here above simple stuff 

      //usually you should give everything in react a wrapper div calling it [ElementName]Box

      //or [ElementName]Container


      var CommentBox = React.createClass({
        getDefaultProps: function() {
          return {
            data: []
          }
        },
        getInitialState: function() {
          return {data: this.props.data};
        },
        componentDidMount: function() {
          this.loadCommentsFromServer();
          // setInterval(this.loadCommentsFromServer, this.props.pollInterval);
        },
        
        loadCommentsFromServer: function() {
          $.ajax({
            url: this.props.url,
            dataType: 'json',
            success: function(data) {
              this.setProps({data: data});
              this.setState({data: data});
            }.bind(this),
            error: function(xhr, status, err) {
              console.error(this.props.url, status, err.toString());
            }.bind(this)
          });
        },
        handleCommentSubmit: function(comment) {

          var comments = this.state.data;
          var newComments = comments.concat([comment]);
          this.setProps({data: newComments});
          this.setState({data: newComments});


          $.ajax({
            url: this.props.url,
            dataType: 'json',
            type: 'POST',
            data: comment,
            success: function(data) {
              this.setState({data: data});
            }.bind(this),
            error: function(xhr, status, err) {
              console.error(this.props.url, status, err.toString());
            }.bind(this)
          });
        },

        filterSearch: function(query) {
          this.props.data.forEach(function(obj) {
            obj.text = obj.text.replace(new RegExp('<b>', 'gi'), '');
            obj.text = obj.text.replace(new RegExp('</b>', 'gi'), '');
          });
          var newData = this.props.data.filter(function(_data) {
            return _data.text.toUpperCase().indexOf(query.toUpperCase()) !== -1;
          });
          newData.forEach(function(obj) {
            if (query.length !== 0) {
              obj.text = obj.text.replace(new RegExp(query, 'gi'), '<b>' + query + '</b>');
            }
          });
          this.setState({
            data: newData
          });
        },
        render: function() {
          return (
            <div className="commentBoxContainer">        
            <h1>Comments</h1>
            <SearchBox filterSearch={this.filterSearch} />
            <CommentForm onCommentSubmit={this.handleCommentSubmit} />
            <CommentList data={this.state.data} />
            </div>
          );
        }
      });
      
      /*
       * 
       */
      var SearchBox = React.createClass({
        handleKeyUp: function(e) {
          this.props.filterSearch(this.refs.search.getDOMNode().value);
        },
        render: function() {
          return <input className='search' placeholder='search' type='text' ref='search' onKeyUp={this.handleKeyUp}></input>
        }
      });

      // tutorial2.js
      var CommentList = React.createClass({
        render: function() {
          var commentNodes = this.props.data.map(function (comment) {
            return (
              <Comment author={comment.author}>
                {comment.text}
              </Comment>
            );
          });

          return (
            <div className="commentList">
               {commentNodes}
            </div>
          );
        }
      });

      var CommentForm = React.createClass({

        handleSubmit: function() {
          var author = this.refs.author.getDOMNode().value.trim();
          var text = this.refs.text.getDOMNode().value.trim();
          this.props.onCommentSubmit({author: author, text: text});

          if (!text || !author) {
            return false;
          }
          // TODO: send request to the server
          this.refs.author.getDOMNode().value = '';
          this.refs.text.getDOMNode().value = '';
          return false;
        },


        render: function() {
          return (
            <div className="commentForm">
              <form className="commentForm" onSubmit={this.handleSubmit}>
                <input type="text" placeholder="Your name" ref="author" />
                <input type="text" placeholder="Say something..." ref="text" />
                <input type="submit" value="Post" />
              </form>
            </div>
          );
        }
      });

      React.renderComponent(
        <CommentBox url="comments.json" pollInterval={2000} />,
        document.getElementById('content')
      );

//Look into 
    </script>
    <style>

      .commentBoxContainer {
        width: 70%;
         
      }
      
      .commentContainer  {
          display: table;
          width: 100%;
          border-bottom: 1px solid #DDDDDD;
      }

      .checkXContainer {
        float: left;
        width:40px;
      }

      .checkXContainer > div{
        float: left;
        width:20px;
      }

      .commentContainer >*{
        
        display: table-cell;
      }
      .commentContainer .commentAuthor {
        font-size: 12px;
        width:100px;
      }
      h2 {
        
      }
    </style>

  </body>
</html>